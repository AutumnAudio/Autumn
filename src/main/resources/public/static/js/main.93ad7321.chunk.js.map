{"version":3,"sources":["logo.svg","Component/Chatroom/Person.js","Component/Chatroom/PersonList.js","Component/Chatroom/PersonPanel.js","Component/Chatroom/ChatMessage.js","Component/Chatroom/ChatMessageList.js","Component/Chatroom/ChatBoard.js","Component/Chatroom/TextBox.js","Component/Chatroom/Chatroom.js","Component/Lobby/ChatroomCard.js","Component/Lobby/ChatroomCardGrid.js","Component/Lobby/Lobby.js","Component/AutumnApi/AutumnApi.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","personIcon","position","marginLeft","float","fontSize","nameDiv","positive","currentSongDiv","color","personDiv","margin","addIcon","marginTop","props","classes","person","recentlyPlayedSong","recentlyPlayedArtist","className","username","personListDiv","participants","map","participant","index","styles","roomHeader","arrowBack","fontWeight","paddingTop","textDiv","chatMessageList","message","chat","chatBoardDiv","left","width","height","background","textBox","top","input","border","fontFamily","personPanelStyle","useState","setParticipants","setChat","useEffect","ws","WebSocket","onmessage","msg","chatroom","JSON","parse","console","log","participantsArray","i","push","length","updateprops","onclose","paper","chatroomName","paddingLeft","Grid","item","Paper","genre","root","chatrooms","container","spacing","xs","justify","lobby","headline","setChatrooms","fetch","then","response","json","data","chatroomsArray","App","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93ad7321.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst styles = {\n    personIcon: {\n        position: 'relative',\n        marginLeft: '10%',\n        float: 'left',\n        fontSize: '40px'\n    },\n    nameDiv: {\n        positive: 'relative',\n        marginLeft: '25%',\n        fontSize: '20px',\n    },\n    currentSongDiv: {\n        fontSize: '12px',\n        position: 'relative',\n        marginLeft: '25%',\n        color: '#D0D1D7',\n    },\n    personDiv: {\n        color: 'white',\n        margin: '20px',\n    },\n    addIcon: {\n        position: 'absolute',\n        marginLeft: '270px',\n        marginTop: '-10px',\n    }\n};\n\nconst Person = (props) => {\n    const { classes, person } = props\n    var recentlyPlayedSong = ''\n    var recentlyPlayedArtist = ''\n    if (person['recentlyPlayed'][0] != null) {\n        recentlyPlayedSong = person['recentlyPlayed'][0]['name']\n        recentlyPlayedArtist = person['recentlyPlayed'][0]['artists'][0]\n    }\n    return (\n        <div className={classes.personDiv}>\n            <PersonIcon className={classes.personIcon}/>\n            <div className={classes.nameDiv}>{person.username}</div>\n            <AddIcon className={classes.addIcon}/>\n            <div className={classes.currentSongDiv}>{recentlyPlayedSong} - {recentlyPlayedArtist}</div>\n        </div>\n    )\n    \n}\n\nPerson.propTypes = {\n    classes: PropTypes.object.isRequired,\n    person: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Person)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Person from './Person';\nconst styles = {\n    personListDiv: {\n        marginTop: '30px',\n    }\n};\n\nconst PersonList = (props) => {\n    const { classes, participants } = props;\n    return (\n        <div className={classes.personListDiv}>\n            {participants.map((participant, index) => {\n                return (<Person key={participant.username} person={participant}/>)\n            })}\n            \n        </div>\n    )\n    \n}\n\nPersonList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    participants: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(PersonList)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PersonList from './PersonList';\nconst styles = {\n    roomHeader: {\n        margin: '25px',\n        color: 'white',\n        margin: '35px auto 0px 160px',\n        display: 'inline-block',\n    },\n    arrowBack: {\n        color: 'white',\n        marginLeft: '25px',\n    }\n};\n\nconst PersonPanel = (props) => {\n    \n    const { classes, participants } = props\n    return (\n        <div>\n            <ArrowBackIcon className={classes.arrowBack}/>\n            <h1 className={classes.roomHeader}>Pop</h1>\n            <PersonList participants={participants}/>\n        </div>\n    )\n    \n}\n\nPersonPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n    participants: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(PersonPanel)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = {\n    personIcon: {\n        float: 'left',\n        fontSize: '47px',\n        color: '#2699FB',\n    },\n    nameDiv: {\n        fontWeight: 'bold',\n        marginLeft: '55px',\n        paddingTop: '5px',\n    },\n    textDiv: {\n        marginLeft: '55px',\n        marginTop: '5px',\n        fontWeight: '300',\n    },\n    chatMessageList: {\n        margin: '20px',\n    },\n};\n\nconst ChatMessage = (props) => {\n    const { classes, message } = props;\n    return (\n        <div className={classes.chatMessageList}>\n            <PersonIcon className={classes.personIcon}/>\n            <div className={classes.nameDiv}>{message.username}</div>\n            <div className={classes.textDiv}>{message.message}</div>\n        </div>\n    )\n    \n}\n\nChatMessage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChatMessage)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChatMessage from './ChatMessage';\n\nconst styles = {\n    \n};\n\nconst ChatMessageList = (props) => {\n    const { classes, chat } = props;\n    return (\n        <div>\n            {chat.map((message, index) => {\n                return <ChatMessage message={message}/>\n            })}\n        </div>\n    )\n    \n}\n\nChatMessageList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChatMessageList)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChatMessageList from './ChatMessageList'\n\nconst styles = {\n    chatBoardDiv: {\n        position: 'absolute',\n        left: '30%',\n        width: '70%',\n        height: '90%',\n        background: '#F3F2FF',\n    }\n};\n\nconst ChatBoard = (props) => {\n    const { classes, chat } = props;\n    return (\n        <div className={classes.chatBoardDiv}>\n            <ChatMessageList chat={chat}/>\n        </div>\n    )\n}\n\nChatBoard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChatBoard)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    textBox: {\n        position: 'absolute',\n        left: '30%',\n        width: '70%',\n        height: '10%',\n        top: '90%',\n    },\n    input: {\n        \n        width: '100%',\n        height: '100%',\n        border: '0',\n        fontFamily: 'sans-serif',\n        // padding: '10px',\n    }\n};\n\nconst TextBox = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.textBox}>\n            <textarea  className={classes.input}/>\n        </div>\n    )\n    \n}\n\nTextBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextBox)","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport PersonPanel from './PersonPanel';\nimport ChatBoard from './ChatBoard';\nimport TextBox from './TextBox'\n\nconst styles = {\n    personPanelStyle: {\n        width: '30%',\n        height: '100%',\n        background: '#1E2341',\n        position: 'absolute',\n    },\n};\nconst updateprops = (msg, setParticipants, setChat) => {\n    let chatroom = JSON.parse(msg['data'])\n    console.log(chatroom)\n    let participants = chatroom['participants']\n    let chat = chatroom['chat']\n    let participantsArray = []\n    console.log(participants)\n    for (let i in participants) {\n        participantsArray.push(participants[i])\n    }\n    console.log(participantsArray)\n    if (participantsArray.length > 0) {\n        console.log(participantsArray)\n        setParticipants(participantsArray)\n    }\n    setChat(chat)\n}\nconst Chatroom = (props) => {\n    const { classes } = props;\n    const [participants, setParticipants] = useState([])\n    const [chat, setChat] = useState([])\n    let hostname = 'localhost'\n    let port = '8080'\n    useEffect(() => {\n        let ws = new WebSocket('ws://' + hostname + ':' + port + '/chatroom')\n        ws.onmessage = msg => updateprops(msg, setParticipants, setChat);\n        ws.onclose = () => console.log(\"WebSocket connection closed\")\n    }, []);\n    \n    return (\n        <div>\n            <div className={classes.personPanelStyle}><PersonPanel participants={participants}/></div>\n            \n            <ChatBoard chat={chat}/>\n            <TextBox />\n        </div>\n    )\n    \n}\nChatroom.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Chatroom)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withTheme } from '@material-ui/styles';\n\nconst styles = {\n    paper: {\n        height: 180,\n        width: 180,\n        background: 'pink',\n    },\n    chatroomName: {\n        paddingTop: '75%',\n        paddingLeft: '65%',\n        fontSize: '25px',\n        color: 'white',\n    }\n};\n\nconst ChatroomCard = (props) => {\n    const { classes, chatroom } = props;\n    return (\n        <Grid item>\n            <Paper className={classes.paper}>\n                <div className={classes.chatroomName}>{chatroom.genre}</div>\n            </Paper>\n        </Grid>\n    )\n    \n}\nChatroomCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    chatroom: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChatroomCard)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ChatroomCard from './ChatroomCard';\n\nconst styles = {\n    root: {\n        width: '100%',\n        marginLeft: '0',\n        marginTop: '40px',\n    }\n};\n\nconst ChatroomCardGrid = (props) => {\n    const { classes, chatrooms } = props;\n    return (\n        <div>\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={6}>\n                        {chatrooms.map((chatroom, index) => {\n                            return <ChatroomCard chatroom={chatroom}/>\n                        })}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n    \n}\nChatroomCardGrid.propTypes = {\n    classes: PropTypes.object.isRequired,\n    chatrooms: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(ChatroomCardGrid)","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChatroomCardGrid from './ChatroomCardGrid'\nimport { getChatrooms } from '../AutumnApi/AutumnApi'\n\nconst styles = {\n    lobby: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n        width: '100%',\n        height: '100%',\n        background: '#1E2341',\n    },\n    headline: {\n        marginLeft: '7%',\n        marginTop: '40px',\n        fontSize: '30px',\n        color: 'white',\n    }\n}\n\nconst Lobby = (props) => {\n    const { classes } = props\n    const [chatrooms, setChatrooms] = useState([])\n    useEffect(() => {\n        getChatrooms().then((response) => {\n            return response.json()\n        }).then((data) => {\n            let chatrooms = data['chatrooms']\n            \n            let chatroomsArray = []\n            for (let i in chatrooms) {\n                chatroomsArray.push(chatrooms[i])\n            }\n            console.log(chatroomsArray)\n            setChatrooms(chatroomsArray)\n        })\n    }, []);\n    return (\n        <div className={classes.lobby}>\n            <div className={classes.headline}>Chatrooms:</div>\n            <ChatroomCardGrid chatrooms={chatrooms} />\n        </div>\n    )\n    \n}\nLobby.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Lobby)","export function joinRoom(username, genre) {\n    let formData = new FormData()\n    formData.append('username', username)\n    return fetch('/joinroom/' + genre, {\n        method: 'POST',\n        body: formData\n    })\n}\nexport function getChatrooms() {\n    return fetch('/chatrooms')\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Chatroom from './Component/Chatroom/Chatroom'\nimport Lobby from './Component/Lobby/Lobby'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      \n      <Switch>\n        <Route path=\"/chatroom\">\n          <Chatroom />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route path=\"/lobby\">\n          <Lobby />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route path=\"/\">\n          <Link to=\"/chatroom\">chatroom</Link><br />\n          <Link to=\"/lobby\">lobby</Link>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}